svn安装配置流程 	2017/2/21
 
	测试机器：192.168.50.32
	操作系统：centos 6.5
	路径：/home/www/svn
	遇到的问题：post-commit 设置的编码与系统的编码不一致造成的无法同步
	
	一.安装
　　yum install subversion

　　二.配置
　　本系统采用为每个项目单独建一版本库的策略。配置文件，密码文件，访问控制文件等都放在版本库的conf目录下。

　　所以每次开始一个新项目都必须新建一个版本库，并重新配置各配置文件。还有很重要的一条，要求各组员重新配置客户端，包括服务器版本库路径，本地路径等信息。

　　1. 建立版本库目录(可建立多个，新建库后以下各项都需重新配置。注意区别安装目录与版本库目录,以下讲的都是版本库目录)
　　mkdir –p /home/www/svn/yun88

　　#类似可以创建 mkdir –p /home/svn/repos2 /home/svn/repos3

　　2. 建立svn版本库(与上面目录对应)

　　svnadmin create /home/www/svn/yun88
 
　　执行此命令后svn自动在yun88目录下添加必须的配置文件.

　　注意:版本库不同于一般的文件夹, 直接在操作系统上新建文件无法被SVN识别, 必须使用import等命令将文件导入版本库.

　　此为svn内部指令，create用于新建版本库。请使用svn help查看详细说明。

　　3. 修改版本库配置文件

　　vi /home/www/svn/yun88/conf/svnserve.conf

　　各参数功能在配置文件的注释中有说明, 此处配置如下:

　　[general]

　　anon-access = none # 使非授权用户无法访问

　　auth-access = write # 使授权用户有写权限

　　password-db = /home/www/svn/passwd # 指明密码文件路径

　　authz-db = /home/www/svn/authz # 访问控制文件

　　realm = yun88 # 认证命名空间，subversion会在认证提示里显示，并且作为凭证缓存的关键字。

　　其它采用默认配置. 各语句都必须顶格写, 左侧不能留空格, 否则会出错.

　　4. 配置用户

　　vi /home/www/svn/passwd

　　输入以下内容：
　　[users]
	heyafei = abc12323
	baijing = dcea3Add

　　可以添加多个，此为用户名密码对。

　　5. 配置权限
　　vi /home/www/svn/authz
　　此配置文件设置各用户的授权。
　　包括只读r，读写rw。没有列出的用户，则不允许访问。还可以对用户分组，具体请参考svn手册，以下是简单例子：
　　#对仓库repos根目录权限设置

　　[yun88:/]
　　yun88 = rw
	

　　6. 使用import导入文件

　　新建好的版本库是空的，需要导入工作目录。

	cd /home/www/yun88_2017
	//svn checkout svn://192.168.50.32/yun88
	svn co svn://192.168.50.32/yun88
	//mv 192.168.50.32 /home/www/yun88_20171
	svn info
	svn update
	
	svn://192.168.50.32/yun88
	heyafei = abc$#@123
	baijing = dce@#$Add
	
　　三.启动服务
	设置监听目录。
　　svnserve -d -r /home/www/svn
　　svn checkout svn://192.168.50.32/yun88

　　输入用户名密码即可


配置钩子  post-commit

cd ./hooks
cp post-commit.tmpl post-commit
chmod +x post-commit
vi post-commit

export LANG=en_US.UTF-8

LOG_PATH=/home/www/svn/log/svn.log
echo `date "+%Y-%m-%d %H:%M:%S"` >> $LOG_PATH
echo `whoami`,$REPOS,$REV >> $LOG_PATH

svn update /home/www/yun88 --username=heyafei --password=abc$#@123 --no-auth-cache
chown -R www:www /home/www/yun88

#mailer.py commit "$REPOS" "$REV" /path/to/mailer.conf

/*
su -c 'svn up /home/test/workspace/firsttest' test
其中“su -c 'svn up /home/test/workspace/firsttest' test”这句话的意思是：

　　切换到test账户，就是你的svn副本是哪个账户就切换到哪个账户，要是root就直接运行“svn up /home/test/workspace/firsttest”就可以了。

　　之所以要切换账户，是因为在svn进行update操作的时候会对副本里面的.svn目录下的内容进行修改，有可能会添加新的文件或目录，这样会导致之后的副本里面使用非root账户操作的时候失败。
*/

-------------常用命令大全-----------

	1、将文件checkout到本地目录
		svn checkout path（path是服务器上的目录）
		例如：svn checkout svn://192.168.50.32/yun88
		简写：svn co svn://192.168.50.32/yun88

	2、往版本库中添加新的文件
		svn add file
		例如：svn addtest.php(添加test.php)
		svn add *.php(添加当前目录下所有的php文件)

	3、将改动的文件提交到版本库
		svn commit -m “LogMessage“ [-N] [--no-unlock] PATH(如果选择了保持锁，就使用–no-unlock开关)
		例如：svn commit -m “add test file for my test“ test.php
		简写：svn ci
		
	4、加锁/解锁
		svn lock -m “LockMessage“ [--force] PATH
		例如：svn lock -m “lock test file“ test.php
		svn unlock PATH
		
	5、更新到某个版本
		svn update -r m path
		例如：
		svn update如果后面没有目录，默认将当前目录以及子目录下的所有文件都更新到最新版本。
		svn update -r 200 test.php(将版本库中的文件test.php还原到版本200)
		svn update test.php(更新，于版本库同步。如果在提交的时候提示过期的话，是因为冲突，需要先update，修改文件，然后清除svn resolved，最后再提交commit)
		简写：svn up
		
	6、查看文件或者目录状态
		1）svn status path（目录下的文件和子目录的状态，正常状态不显示）
		【?：不在svn的控制中；M：内容被修改；C：发生冲突；A：预定加入到版本库；K：被锁定】
		2）svn status -v path(显示文件和子目录状态)
		第一列保持相同，第二列显示工作版本号，第三和第四列显示最后一次修改的版本号和修改人。
		注：svn status、svn diff和 svn revert这三条命令在没有网络的情况下也可以执行的，原因是svn在本地的.svn中保留了本地版本的原始拷贝。
		简写：svn st
		
	7、删除文件
		svn delete path -m “delete test fle“
		例如：svn delete svn://192.168.1.1/pro/domain/test.php -m “delete test file”
		或者直接svn delete test.php 然后再svn ci -m ‘delete test file‘，推荐使用这种
		简写：svn (del, remove, rm)

	8、查看日志
		svn log path
		例如：svn log test.php 显示这个文件的所有修改记录，及其版本号的变化
		
	9、查看文件详细信息
		svn info path
		例如：svn info test.php
		
	10、比较差异
		svn diff path(将修改的文件与基础版本比较)
		例如：svn diff test.php
		svn diff -r m:n path(对版本m和版本n比较差异)
		例如：svn diff -r 200:201 test.php
		简写：svn di
		
	11、将两个版本之间的差异合并到当前文件
		svn merge -r m:n path
		例如：svn merge -r 200:205 test.php（将版本200与205之间的差异合并到当前文件，但是一般都会产生冲突，需要处理一下）

	12、SVN 帮助
		svn help
		svn help ci
		
	——————————————————————————
	以上是常用命令，下面写几个不经常用的
	——————————————————————————

	13、版本库下的文件和目录列表
		svn list path
		显示path目录下的所有属于版本库的文件和目录
		简写：svn ls
		
	14、创建纳入版本控制下的新目录
		svn mkdir: 创建纳入版本控制下的新目录。
		用法: 
        1、mkdir PATH…
        2、mkdir URL…
		
		创建版本控制的目录。
        1、每一个以工作副本 PATH 指定的目录，都会创建在本地端，并且加入新增调度，以待下一次的提交。
        2、每个以URL指定的目录，都会透过立即提交于仓库中创建。在这两个情况下，所有的中间目录都必须事先存在。

	15、恢复本地修改svn revert: 恢复原始未改变的工作副本文件 (恢复大部份的本地修改)。revert:
         用法: revert PATH…
         注意: 本子命令不会存取网络，并且会解除冲突的状况。但是它不会恢复被删除的目录

	16、代码库URL变更svn switch (sw): 更新工作副本至不同的URL。
		用法: 1、switch URL [PATH]
          2、switch –relocate FROM TO [PATH...]
          1、更新你的工作副本，映射到一个新的URL，其行为跟“svn update”很像，也会将服务器上文件与本地文件合并。这是将工作副本对应到同一仓库中某个分支或者标记的方法。
          2、改写工作副本的URL元数据，以反映单纯的URL上的改变。当仓库的根URL变动(比如方案名或是主机名称变动)，但是工作副本仍旧对映到同一仓库的同一目录时使用这个命令更新工作副本与仓库的对应关系。
	17、解决冲突
		svn resolved: 移除工作副本的目录或文件的“冲突”状态。
		用法: resolved PATH…
		注意: 本子命令不会依语法来解决冲突或是移除冲突标记；它只是移除冲突的
		相关文件，然后让 PATH 可以再次提交。
	18、输出指定文件或URL的内容。
		svn cat 目标[@版本]…如果指定了版本，将从指定的版本开始查找。
		svn cat -r PREV filename > filename (PREV 是上一版本,也可以写具体版本号,这样输出结果是可以提交的)
		svn add file|dir -- 添加文件或整个目录

	svn checkout -- 获取svn代码
	svn commit  -- 提交本地修改代码
	svn status    -- 查看本地修改代码情况：修改的或本地独有的文件详细信息
	svn merge   -- 合并svn和本地代码
	svn revert   -- 撤销本地修改代码
	svn resolve -- 合并冲突代码
	svn help [command] -- 查看svn帮助，或特定命令帮助
	
	
	net start svnservice
	net stop svnservice
	sc delete svnservice
	
	停止svn服务使用
	ps -ef|grep svn
    kill -9 进程号
	
	svn checkout svn://ip/repos
	启动svn服务使用
	
	参考文献：http://www.cnblogs.com/wanqieddy/archive/2011/06/09/2076783.html